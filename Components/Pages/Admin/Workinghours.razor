@page "/admin/workinghours"
@using Managemate.Models
@using Microsoft.EntityFrameworkCore
@layout AdminDashboardLayout

@inject ManageMateDBConetxt DbContext

<PageTitle>Working Hours</PageTitle>

<style>
    .table-container {
        max-width: 900px;
        margin: 70px auto auto;
    }
</style>

<div class="table-container">
    <table class="table table-striped table-hover">
        <thead class="table-header-green">
            <tr>
                <th>Employee</th>
                <th>Check-in Times</th>
                <th>Check-out Times</th>
                <th>Total Hours</th>
            </tr>
        </thead>
        <tbody>
            @if (WorkLogs == null)
            {
                <tr><td colspan="4">Loading...</td></tr>
            }
            else if (!WorkLogs.Any())
            {
                <tr><td colspan="4">No records found.</td></tr>
            }
            else
            {
                @foreach (var log in WorkLogs)
                {
                    var firstCheckIn = log.Sessions.OrderBy(s => s.CheckInTime).FirstOrDefault()?.CheckInTime;
                    var lastCheckOut = log.Sessions.OrderByDescending(s => s.CheckoutTime).FirstOrDefault()?.CheckoutTime;
                    var totalWorked = TimeSpan.FromMinutes(log.TotalMinutesWorked);

                    <tr>
                        <td>@(log.Employee?.Email ?? "Unknown")</td> <!-- FIX: Display Email Instead -->
                        <td>@(firstCheckIn?.ToString("hh:mm tt") ?? "N/A")</td>
                        <td>@(lastCheckOut?.ToString("hh:mm tt") ?? "N/A")</td>
                        <td>@totalWorked.ToString(@"hh\:mm\:ss")</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    private List<WorkLog> WorkLogs { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        WorkLogs = await DbContext.WorkLogs
            .Include(w => w.Sessions)
            .Include(w => w.Employee) // Ensure Employee details are loaded
            .Where(w => w.LogDate.Date == DateTime.UtcNow.Date)
            .ToListAsync();
    }
}
